// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// kissmig_c
Rcpp::NumericVector kissmig_c(const Rcpp::NumericVector& d, const Rcpp::NumericVector& s, const Rcpp::IntegerVector& dim, int it, double pe, double pc, uint8_t ty, int si, int nThreads, uint32_t randRingSize);
RcppExport SEXP _kissmig_kissmig_c(SEXP dSEXP, SEXP sSEXP, SEXP dimSEXP, SEXP itSEXP, SEXP peSEXP, SEXP pcSEXP, SEXP tySEXP, SEXP siSEXP, SEXP nThreadsSEXP, SEXP randRingSizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type d(dSEXP);
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type s(sSEXP);
    Rcpp::traits::input_parameter< const Rcpp::IntegerVector& >::type dim(dimSEXP);
    Rcpp::traits::input_parameter< int >::type it(itSEXP);
    Rcpp::traits::input_parameter< double >::type pe(peSEXP);
    Rcpp::traits::input_parameter< double >::type pc(pcSEXP);
    Rcpp::traits::input_parameter< uint8_t >::type ty(tySEXP);
    Rcpp::traits::input_parameter< int >::type si(siSEXP);
    Rcpp::traits::input_parameter< int >::type nThreads(nThreadsSEXP);
    Rcpp::traits::input_parameter< uint32_t >::type randRingSize(randRingSizeSEXP);
    rcpp_result_gen = Rcpp::wrap(kissmig_c(d, s, dim, it, pe, pc, ty, si, nThreads, randRingSize));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_kissmig_kissmig_c", (DL_FUNC) &_kissmig_kissmig_c, 10},
    {NULL, NULL, 0}
};

RcppExport void R_init_kissmig(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
